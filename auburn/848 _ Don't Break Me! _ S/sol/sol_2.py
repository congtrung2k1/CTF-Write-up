import string

s = [ 0x58, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x50, 0x00, 
  0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0x00, 
  0x58, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x53, 0x00, 
  0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 
  0x45, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x49, 0x00, 
  0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 
  0x56, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x49, 0x00, 
  0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 
  0x57, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x52, 0x00, 
  0x00, 0x00, 0x4A, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 
  0x57, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x5A, 0x00, 
  0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 
  0x53, 0x00, 0x00, 0x00, 0x51 ]

de = [0] * 0x10
j = 0
for i in range(0,0x20):
	if i & 1 == 0:
		de[0xF - j] = chr(s[i * 4])
		j += 1

de = ''.join(de)
#SASRRWSXBIEBCMPX

def sar(tmp, index):
	i = (tmp >> 31) & 1
	while index > 0:
		tmp = (tmp >> 1) | (i << 31)
		index -= 1
	return tmp

flag = ''
for i in range(16):
	for j in string.printable:
		tmp = 0x11 * (ord(j) - 0x41) + 0xC
		
		tmp = tmp - (sar((tmp * 0x4ec4ec4f) >> 32, 3) - sar(tmp,0x1F)) * 0x1A + 0x41

		if chr(tmp) == de[i]:
			flag += j
			break

print(flag)
#c1cffqcnbgsbyuln




#auctf{static_or_dyn@mIc?_12923}
